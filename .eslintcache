[{"/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/index.js":"1","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/App.js":"2","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/reportWebVitals.js":"3","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/customhooks/useScrollMove.js":"4","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/Intro.jsx":"5","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/Nav.jsx":"6","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/MyWork.jsx":"7","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/About.jsx":"8","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/customhooks/useIntersectionObs.js":"9","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/Contact.jsx":"10","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/NavChoices.jsx":"11","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/WorkCard.jsx":"12","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/Stackitems.jsx":"13"},{"size":500,"mtime":1612424479638,"results":"14","hashOfConfig":"15"},{"size":1450,"mtime":1612452352974,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1612424479638,"results":"17","hashOfConfig":"15"},{"size":565,"mtime":1612448298555,"results":"18","hashOfConfig":"15"},{"size":1708,"mtime":1612477335524,"results":"19","hashOfConfig":"15"},{"size":1175,"mtime":1612452400667,"results":"20","hashOfConfig":"15"},{"size":2705,"mtime":1612520468730,"results":"21","hashOfConfig":"15"},{"size":5694,"mtime":1612477944902,"results":"22","hashOfConfig":"15"},{"size":794,"mtime":1612436140989,"results":"23","hashOfConfig":"15"},{"size":3015,"mtime":1612518035103,"results":"24","hashOfConfig":"15"},{"size":931,"mtime":1612442655073,"results":"25","hashOfConfig":"15"},{"size":2704,"mtime":1612521681482,"results":"26","hashOfConfig":"15"},{"size":380,"mtime":1612471997416,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1vyj7y6",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/index.js",[],["60","61"],"/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/App.js",["62","63"],"import \"./App.css\";\nimport Intro from \"./components/Intro\";\nimport About from \"./components/About\";\nimport MyWork from \"./components/MyWork\";\nimport Nav from \"./components/Nav\";\nimport useScrollMove from \"./customhooks/useScrollMove\";\nimport { useEffect, useState, useRef } from \"react\";\n\nfunction App() {\n  const wheel = useScrollMove();\n  const [pageIndex, setPagesIndex] = useState(0);\n  const [clickIndex, setClickIndex] = useState(null);\n  const introRef = useRef();\n  const aboutRef = useRef();\n  const workRef = useRef();\n  const pages = [introRef.current, aboutRef.current, workRef.current];\n\n  useEffect(() => {\n    let changePage = pageIndex;\n\n    if (wheel.dir === \"up\" && changePage > 0) {\n      changePage -= 1;\n      setPagesIndex(changePage);\n    } else if (wheel.dir === \"down\" && changePage < pages.length - 1) {\n      changePage += 1;\n      setPagesIndex(changePage);\n    }\n\n    if (pages[changePage]) {\n      pages[changePage].scrollIntoView({ behavior: \"smooth\", block: \"end\" });\n    }\n  }, [wheel]);\n\n  useEffect(() => {\n    if (pages[clickIndex]) {\n      pages[clickIndex].scrollIntoView({ behavior: \"smooth\", block: \"end\" });\n      setPagesIndex(clickIndex);\n    }\n  }, [clickIndex]);\n\n  return (\n    <div className=\"App\">\n      <Nav click={[clickIndex, setClickIndex]} pageIndex={pageIndex} />\n      <Intro ref={introRef} />\n      <About ref={aboutRef} />\n      <MyWork ref={workRef} />\n    </div>\n  );\n}\n\nexport default App;\n","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/reportWebVitals.js",[],"/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/customhooks/useScrollMove.js",[],"/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/Intro.jsx",[],"/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/Nav.jsx",["64"],"import \"./Nav.css\";\nimport { useEffect, useState } from \"react\";\nimport NavChoices from \"./NavChoices\";\n\nconst Nav = ({ click, pageIndex }) => {\n  const setClickIndex = click[1];\n  const [menuChoice, setMenuChoice] = useState({\n    home: true,\n    about: false,\n    work: false,\n  });\n\n  const handleDots = (e) => {\n    const changeDots = { ...menuChoice };\n    let index = 0;\n    for (const key in changeDots) {\n      if (e.target.id === key) {\n        changeDots[key] = true;\n        setClickIndex(index);\n      } else {\n        changeDots[key] = false;\n      }\n      index++;\n    }\n\n    setMenuChoice(changeDots);\n  };\n\n  useEffect(() => {\n    let index = 0;\n    const changeDots = { ...menuChoice };\n    for (const key in changeDots) {\n      if (index === pageIndex) {\n        changeDots[key] = true;\n      } else {\n        changeDots[key] = false;\n      }\n      index++;\n    }\n    setMenuChoice(changeDots);\n  }, [pageIndex]);\n\n  return (\n    <nav className=\"nav-menu\">\n      <p className=\"code-like\">{\"<nav>\"}</p>\n      <NavChoices handleDots={handleDots} menuChoice={menuChoice} />\n      <p className=\"code-like\">{\"</nav>\"}</p>\n    </nav>\n  );\n};\n\nexport default Nav;\n","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/MyWork.jsx",[],"/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/About.jsx",["65","66"],"import { useEffect, useState, forwardRef } from \"react\";\nimport \"./About.css\";\nimport useIntersectionObs from \"../customhooks/useIntersectionObs\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Stackitems from \"./Stackitems\";\nimport portrait from \"./70567235.jpeg\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { FaReact, FaNodeJs } from \"react-icons/fa\";\nimport { SiRedux, SiMysql, SiFigma } from \"react-icons/si\";\nimport { DiPhotoshop, DiIllustrator } from \"react-icons/di\";\nimport { AiFillLinkedin, AiFillGithub } from \"react-icons/ai\";\n\nconst stackDev = [\n  { name: \"Js\", icone: <IoLogoJavascript size={30} /> },\n  { name: \"React\", icone: <FaReact size={30} /> },\n  { name: \"Redux\", icone: <SiRedux size={30} /> },\n  { name: \"NodeJs\", icone: <FaNodeJs size={30} /> },\n  { name: \"MYSQL\", icone: <SiMysql size={30} /> },\n];\n\nconst stackGfx = [\n  { name: \"Adobe Photoshop\", icone: <DiPhotoshop size={30} /> },\n  { name: \"Adobe Illlustrator\", icone: <DiIllustrator size={30} /> },\n  { name: \"Figma\", icone: <SiFigma size={30} /> },\n];\n\nconst About = (props, ref) => {\n  const ratio = useIntersectionObs(ref);\n  const [stackAnim, setStackAnim] = useState(false);\n  const [opacity, setOpacity] = useState(0);\n  const [portaitPop, setPortraitPop] = useState(false);\n\n  useEffect(() => {\n    if (ratio > 0.8) {\n      setStackAnim(true);\n    } else {\n      setStackAnim(false);\n    }\n\n    if (ratio > 0.5) {\n      setPortraitPop(true);\n    } else {\n      setPortraitPop(false);\n    }\n\n    if (ratio > 0.9) {\n      setOpacity(ratio);\n    } else {\n      setOpacity(0);\n    }\n  }, [ratio]);\n\n  return (\n    <div id=\"about-all\" ref={ref}>\n      <div className=\"about-info\">\n        <p\n          className=\"code-like\"\n          style={{\n            transform: ` translateX(${(1 - ratio) * -400}px)`,\n          }}\n        >\n          {\"<h2>\"}\n        </p>\n        <div\n          className=\"title-underline\"\n          style={{\n            transform: ` rotate(-2deg)`,\n            width: `${ratio * 150}px`,\n          }}\n        >\n          <h2\n            className=\"about-title\"\n            style={{\n              opacity: ` ${opacity}`,\n            }}\n          >\n            About me\n          </h2>\n        </div>\n        <p\n          className=\"code-like\"\n          style={{\n            transform: ` translateX(${(1 - ratio) * -350}px)`,\n          }}\n        >\n          {\"</h2>\"}\n        </p>\n        <div className=\"about-text\">\n          <div className=\"\">\n            <h4>BLABLABLABLABLABLA</h4>\n            <p>\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Libero\n              perspiciatis a, porro minus suscipit dolorum distinctio ipsa sint\n              modi ducimus architecto nihil quis maiores iusto error. Inventore\n              suscipit nisi illum. Lorem ipsum dolor, sit amet consectetur\n              adipisicing elit. Libero perspiciatis a, porro minus suscipit\n              dolorum distinctio ipsa sint modi ducimus architecto nihil quis\n              maiores iusto error. Inventore suscipit nisi illum. Lorem ipsum\n              dolor, sit amet consectetur adipisicing elit. Libero perspiciatis\n              a, porro minus suscipit dolorum distinctio ipsa sint modi ducimus\n              architecto nihil quis maiores iusto error. Inventore suscipit nisi\n              illum. Lorem ipsum dolor, sit amet consectetur adipisicing elit.\n              Libero perspiciatis a, porro minus suscipit dolorum distinctio\n              ipsa sint modi ducimus architecto nihil quis maiores iusto error.\n              Inventore suscipit nisi illum.\n            </p>\n            <a>\n              <AiFillLinkedin size={30} />\n            </a>\n            <a>\n              <AiFillGithub size={30} />\n            </a>\n          </div>\n          <div\n            className=\"portrait\"\n            style={{\n              transform: ` scale(${ratio},${ratio})`,\n              opacity: `${ratio}`,\n            }}\n          >\n            <p className=\"code-like\">{\"<img/>\"}</p>\n            <CSSTransition\n              in={portaitPop}\n              timeout={500}\n              classNames=\"my-node\"\n              unmountOnExit\n            >\n              <img src={portrait} alt=\"portrait\" />\n            </CSSTransition>\n          </div>\n        </div>\n        <div className=\"stacklist\">\n          <div className=\"stack-column\">\n            <div\n              className=\"title-underline\"\n              style={{\n                width: `${ratio * 150}px`,\n              }}\n            >\n              <h3\n                style={{\n                  opacity: ` ${opacity}`,\n                }}\n              >\n                My Dev stack\n              </h3>\n            </div>\n            <CSSTransition\n              in={stackAnim}\n              timeout={500}\n              classNames=\"my-node\"\n              unmountOnExit\n            >\n              <Stackitems type={stackDev} />\n            </CSSTransition>\n          </div>\n          <div className=\"stack-column\">\n            <div\n              className=\"title-underline\"\n              style={{\n                width: `${ratio * 150}px`,\n              }}\n            >\n              <h3\n                style={{\n                  opacity: ` ${opacity}`,\n                }}\n              >\n                My Gfx stack\n              </h3>\n            </div>\n            <CSSTransition\n              in={stackAnim}\n              timeout={500}\n              classNames=\"my-node\"\n              unmountOnExit\n            >\n              <Stackitems type={stackGfx} />\n            </CSSTransition>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default forwardRef(About);\n","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/customhooks/useIntersectionObs.js",[],"/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/Contact.jsx",["67"],"import \"./Contact.css\";\nimport { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nconst errorInit = {\n  nom: \"\",\n  prenom: \"\",\n  mail: \"\",\n  contenu: \"\",\n};\n\nconst Contact = () => {\n  const [isDisplayed, setIsDisplayed] = useState(false);\n  const [anim, setAnim] = useState(false);\n  const [inputs, setInputs] = useState({\n    nom: \"\",\n    prenom: \"\",\n    mail: \"\",\n    contenu: \"\",\n  });\n  const [error, setError] = useState(errorInit);\n  const [success, setSuccess] = useState(\"\");\n\n  const inputsHandler = (e) => {\n    setError(errorInit);\n    setSuccess(\"\");\n    setInputs({ ...inputs, [e.target.id]: e.target.value });\n  };\n\n  const animEnd = () => {\n    if (!anim) {\n      setIsDisplayed(false);\n    }\n  };\n\n  const sendForm = async (e) => {\n    e.preventDefault();\n    let writeError = { ...error };\n    let validate = [];\n    for (const key in inputs) {\n      if (!inputs[key]) {\n        writeError[key] = \"Merci de remplir \" + [key];\n        validate.push(false);\n      }\n    }\n    setError(writeError);\n\n    if (validate.length === 0) {\n      try {\n        await Axios.post(\"/mail\", inputs);\n        setSuccess(\"Message envoyé\");\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <div className=\"contact-ball\">\n      <form\n        style={{\n          animation: `${anim ? \"formon\" : \"formoff\"} 0.2s ease forwards`,\n        }}\n        onAnimationEnd={animEnd}\n        onSubmit={sendForm}\n      >\n        {isDisplayed && (\n          <div className=\"contact-inputs\">\n            <input\n              id=\"nom\"\n              type=\"text\"\n              value={inputs.nom}\n              placeholder={error.nom ? error.nom : \"Nom\"}\n              onChange={inputsHandler}\n            />\n\n            <input\n              id=\"prenom\"\n              type=\"text\"\n              value={inputs.prenom}\n              placeholder={error.prenom ? error.prenom : \"Prenom\"}\n              onChange={inputsHandler}\n            />\n\n            <input\n              id=\"mail\"\n              type=\"text\"\n              value={inputs.mail}\n              placeholder={error.mail ? error.mail : \"E mail\"}\n              onChange={inputsHandler}\n            />\n\n            <textarea\n              id=\"contenu\"\n              value={inputs.contenu}\n              onChange={inputsHandler}\n              placeholder={error.contenu ? error.contenu : \"Contenu\"}\n            />\n            <input type=\"submit\" value={success ? success : \"envoyer\"} />\n          </div>\n        )}\n      </form>\n\n      <span\n        onClick={() => {\n          setIsDisplayed(!isDisplayed);\n          setAnim(!anim);\n        }}\n      >\n        .CONTACT\n      </span>\n    </div>\n  );\n};\n\nexport default Contact;\n\n// <div\n// className=\"network\"\n// style={{\n//   transform: `translateX(${(1 - ratio) * -800}px )`,\n// }}\n// >\n// <a href=\"https://www.linkedin.com/in/romain-heloise/\" target=\"blank\">\n//   <AiFillLinkedin size={30} />\n// </a>\n// <a href=\"https://github.com/romainheloise\" target=\"blank\">\n//   <AiFillGithub size={30} />\n// </a>\n// </div>\n","/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/NavChoices.jsx",[],["68","69"],"/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/WorkCard.jsx",[],"/home/romhel/Documents/WILD/PROJETS/portfolio/front/src/components/Stackitems.jsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":32,"column":6,"nodeType":"76","endLine":32,"endColumn":13,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":39,"column":6,"nodeType":"76","endLine":39,"endColumn":18,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"80","line":41,"column":6,"nodeType":"76","endLine":41,"endColumn":17,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":107,"column":13,"nodeType":"84","endLine":107,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":110,"column":13,"nodeType":"84","endLine":110,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":19},{"ruleId":"70","replacedBy":"89"},{"ruleId":"72","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'pageIndex' and 'pages'. Either include them or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'pages'. Either include it or remove the dependency array.",["94"],"React Hook useEffect has a missing dependency: 'menuChoice'. Either include it or remove the dependency array.",["95"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["91"],["92"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [pageIndex, pages, wheel]",{"range":"102","text":"103"},"Update the dependencies array to be: [clickIndex, pages]",{"range":"104","text":"105"},"Update the dependencies array to be: [menuChoice, pageIndex]",{"range":"106","text":"107"},[1011,1018],"[pageIndex, pages, wheel]",[1193,1205],"[clickIndex, pages]",[918,929],"[menuChoice, pageIndex]"]